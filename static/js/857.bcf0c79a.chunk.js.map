{"version":3,"file":"static/js/857.bcf0c79a.chunk.js","mappings":"iJACA,QAA4B,yBAA5B,EAAkE,0BAAlE,EAAsG,uB,aCEtG,MAcA,EAdcA,IAAgB,IAAf,MAAEC,GAAOD,EACtB,OACEE,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAiBC,UAC/BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAkBC,UAChCH,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAeC,SAAEJ,OAEhC,C,8CCNVK,EAAAA,EAAAA,SAAAA,QADiB,+BAEjB,MAAMC,EAAU,mCA0ChB,MAQA,EARsB,CACpBC,kBAzCFC,iBAKE,aAJuBH,EAAAA,EAAAA,IAAU,+BAADI,OACCH,EAAO,mBAI1C,EAoCEI,iBAlCFF,eAAgCG,GAK9B,aAJuBN,EAAAA,EAAAA,IAAU,yBAADI,OACLH,EAAO,WAAAG,OAAUE,EAAI,8CAIlD,EA6BEC,gBA3BFJ,eAA+BK,GAK7B,aAJuBR,EAAAA,EAAAA,IAAU,UAADI,OACpBI,EAAE,aAAAJ,OAAYH,EAAO,mBAInC,EAsBEQ,UApBFN,eAAyBK,GAKvB,aAJuBR,EAAAA,EAAAA,IAAU,UAADI,OACpBI,EAAE,qBAAAJ,OAAoBH,EAAO,mBAI3C,EAeES,WAbFP,eAA0BK,GAKxB,aAJuBR,EAAAA,EAAAA,IAAU,UAADI,OACpBI,EAAE,qBAAAJ,OAAoBH,EAAO,mBAI3C,E,+FC3CA,QAA0B,yBAA1B,EAAgE,4BAAhE,EAAqG,wBAArG,EAAsI,wBAAtI,EAAwK,yBAAxK,EAA4M,0B,aCM5M,MAwEA,EAxEgBU,KACd,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,KAChCG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,IACpCnB,EAAOwB,IAAYL,EAAAA,EAAAA,UAAS,IAE7BM,GAAWC,EAAAA,EAAAA,MAgCjB,OA9BAC,EAAAA,EAAAA,YAAU,KACR,MAAMd,EAAKY,EAASG,SACjBC,MAAM,YACNC,KAAK,IACLD,MAAM,YACNC,KAAK,IACRT,EAAWR,EAAG,GACb,CAACY,KAEJE,EAAAA,EAAAA,YAAU,KASJP,EAAQW,OAAS,IACnBR,GAAa,GATff,iBACE,MACMwB,SADiBC,EAAAA,EAAAA,WAAyBb,IACxBc,KAAKC,QAG7B,OAFAjB,EAAcc,GAEPA,CACT,CAKEjB,GACGqB,OAAMC,IACLC,QAAQC,IAAIF,GACZb,EAASa,EAAIG,QAAQ,IAEtBC,QAAQlB,GAAa,IAC1B,GACC,CAACH,IAEsB,IAAtBH,EAAWc,QAEX9B,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,UAC7BH,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAgBC,SAAC,iDAOpCJ,EAAM+B,OAAS,GACV9B,EAAAA,EAAAA,KAACyC,EAAAA,EAAK,CAAC1C,MAAOA,IAGnBsB,GACKrB,EAAAA,EAAAA,KAAC0C,EAAAA,EAAM,KAId1C,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,UAC7BH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAkBC,SAC9Ba,EAAW2B,KAAIC,IACdC,EAAAA,EAAAA,MAAA,MAAI5C,UAAWC,EAAcC,SAAA,EAC3B0C,EAAAA,EAAAA,MAAA,MAAI5C,UAAWC,EAAcC,SAAA,CAAC,YACpBH,EAAAA,EAAAA,KAAA,QAAAG,SAAOyC,EAAOE,aAExB9C,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAeC,SAAEyC,EAAOG,YAJLH,EAAOhC,SAQ1C,C","sources":["webpack://goit-react-hw-05-movies/./src/components/pages/common/components/error/Error.module.css?bb1d","components/pages/common/components/error/Error.jsx","components/pages/common/services/MoviesService.js","webpack://goit-react-hw-05-movies/./src/components/pages/movies/movie/components/reviews/Reviews.module.css?d9f8","components/pages/movies/movie/components/reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Error_container__HDA9I\",\"messageBox\":\"Error_messageBox__EwZWm\",\"message\":\"Error_message__VqNLX\"};","import PropTypes from 'prop-types';\nimport styles from './Error.module.css';\n\nconst Error = ({ error }) => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.messageBox}>\n        <span className={styles.message}>{error}</span>\n      </div>\n    </div>\n  );\n};\n\nError.propTypes = {\n  error: PropTypes.string,\n};\n\nexport default Error;\n","import axios from 'axios';\n\nconst endpoint = 'https://api.themoviedb.org/3';\naxios.defaults.baseURL = endpoint;\nconst API_KEY = 'd5b1fa00344d722420179540213be4e9';\n\nasync function getTrendingMovies() {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response;\n}\n\nasync function getSearchResults(term) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${term}&include_adult=false&language=en-US&page=1`\n  );\n\n  return response;\n}\n\nasync function getMovieDetails(id) {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response;\n}\n\nasync function getActors(id) {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response;\n}\n\nasync function getReviews(id) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response;\n}\n\nconst MoviesService = {\n  getTrendingMovies,\n  getSearchResults,\n  getMovieDetails,\n  getActors,\n  getReviews,\n};\n\nexport default MoviesService;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviews\":\"Reviews_reviews__F2zLh\",\"reviewList\":\"Reviews_reviewList__-t-rs\",\"review\":\"Reviews_review__phccX\",\"author\":\"Reviews_author__wAKAj\",\"content\":\"Reviews_content__ycxcw\",\"noReview\":\"Reviews_noReview__Onwym\"};","import Error from 'components/pages/common/components/error/Error';\nimport Loader from 'components/pages/common/components/loader/Loader';\nimport MoviesService from 'components/pages/common/services/MoviesService';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport styles from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviewList, setReviewList] = useState([]);\n  const [movieId, setMovieId] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const pagePath = useLocation();\n\n  useEffect(() => {\n    const id = pagePath.pathname\n      .split('/movies/')\n      .join('')\n      .split('/reviews')\n      .join('');\n    setMovieId(id);\n  }, [pagePath]);\n\n  useEffect(() => {\n    async function getReviews() {\n      const response = await MoviesService.getReviews(movieId);\n      const result = response.data.results;\n      setReviewList(result);\n\n      return result;\n    }\n\n    if (movieId.length > 0) {\n      setIsLoading(true);\n\n      getReviews()\n        .catch(err => {\n          console.log(err);\n          setError(err.message);\n        })\n        .finally(setIsLoading(false));\n    }\n  }, [movieId]);\n\n  if (reviewList.length === 0) {\n    return (\n      <div className={styles.reviews}>\n        <span className={styles.noReview}>\n          No review has been left for this movie yet\n        </span>\n      </div>\n    );\n  }\n\n  if (error.length > 0) {\n    return <Error error={error} />;\n  }\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <div className={styles.reviews}>\n      <ul className={styles.reviewList}>\n        {reviewList.map(review => (\n          <li className={styles.review} key={review.id}>\n            <h4 className={styles.author}>\n              Author: <span>{review.author}</span>\n            </h4>\n            <p className={styles.content}>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["_ref","error","_jsx","className","styles","children","axios","API_KEY","getTrendingMovies","async","concat","getSearchResults","term","getMovieDetails","id","getActors","getReviews","Reviews","reviewList","setReviewList","useState","movieId","setMovieId","isLoading","setIsLoading","setError","pagePath","useLocation","useEffect","pathname","split","join","length","result","MoviesService","data","results","catch","err","console","log","message","finally","Error","Loader","map","review","_jsxs","author","content"],"sourceRoot":""}