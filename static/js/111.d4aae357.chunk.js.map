{"version":3,"file":"static/js/111.d4aae357.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/pages/common/components/error/Error.module.css?bb1d","components/pages/common/components/error/Error.jsx","components/pages/common/services/MoviesService.js","webpack://goit-react-hw-05-movies/./src/components/pages/movies/movie/components/cast/Cast.module.css?64a2","components/pages/movies/movie/components/cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Error_container__HDA9I\",\"messageBox\":\"Error_messageBox__EwZWm\",\"message\":\"Error_message__VqNLX\"};","import PropTypes from 'prop-types';\nimport styles from './Error.module.css';\n\nconst Error = ({ error }) => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.messageBox}>\n        <span className={styles.message}>{error}</span>\n      </div>\n    </div>\n  );\n};\n\nError.propTypes = {\n  error: PropTypes.string,\n};\n\nexport default Error;\n","import axios from 'axios';\n\nconst endpoint = 'https://api.themoviedb.org/3';\naxios.defaults.baseURL = endpoint;\nconst API_KEY = 'd5b1fa00344d722420179540213be4e9';\n\nasync function getTrendingMovies() {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response;\n}\n\nasync function getSearchResults(term) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${term}&include_adult=false&language=en-US&page=1`\n  );\n\n  return response;\n}\n\nasync function getMovieDetails(id) {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response;\n}\n\nasync function getActors(id) {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response;\n}\n\nasync function getReviews(id) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response;\n}\n\nconst MoviesService = {\n  getTrendingMovies,\n  getSearchResults,\n  getMovieDetails,\n  getActors,\n  getReviews,\n};\n\nexport default MoviesService;\n","// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__ytIwa\",\"actorList\":\"Cast_actorList__nY1vK\",\"actor\":\"Cast_actor__k3klb\",\"profilePic\":\"Cast_profilePic__a1Cg0\",\"name\":\"Cast_name__t82CB\",\"character\":\"Cast_character__Qx5pO\",\"infos\":\"Cast_infos__7-gAC\"};","import { useEffect, useState } from 'react';\nimport styles from './Cast.module.css';\nimport { useLocation } from 'react-router-dom';\nimport Loader from 'components/pages/common/components/loader/Loader';\nimport Error from 'components/pages/common/components/error/Error';\nimport MoviesService from 'components/pages/common/services/MoviesService';\n\nconst Cast = () => {\n  const [actorList, setActorList] = useState([]);\n  const [movieId, setMovieId] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const pathPage = useLocation();\n\n  useEffect(() => {\n    const id = pathPage.pathname\n      .split('/movies/')\n      .join('')\n      .split('/cast')\n      .join('');\n    setMovieId(id);\n  }, [pathPage]);\n\n  useEffect(() => {\n    async function getActors() {\n      const response = await MoviesService.getActors(movieId);\n      const result = response.data.cast;\n      setActorList(result);\n      // console.log(result);\n\n      return result;\n    }\n\n    if (movieId.length > 0) {\n      setIsLoading(true);\n\n      getActors()\n        .catch(err => {\n          console.log(err);\n          setError(err.message);\n        })\n        .finally(setIsLoading(false));\n    }\n  }, [movieId]);\n\n  function createImgURL(picPath) {\n    return `https://image.tmdb.org/t/p/original/${picPath}`;\n  }\n\n  if (error.length > 0) {\n    return <Error error={error} />;\n  }\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <div className={styles.cast}>\n      <ul className={styles.actorList}>\n        {actorList.map(actor => (\n          <li className={styles.actor} key={actor.id}>\n            <img\n              src={createImgURL(actor.profile_path)}\n              alt={`${actor.name}`}\n              className={styles.profilePic}\n            />\n            <div className={styles.infos}>\n              <h4 className={styles.name}>{actor.name}</h4>\n              <span className={styles.character}>\n                Character: <span>{actor.character}</span>\n              </span>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["_ref","error","_jsx","className","styles","children","axios","API_KEY","getTrendingMovies","async","concat","getSearchResults","term","getMovieDetails","id","getActors","getReviews","Cast","actorList","setActorList","useState","movieId","setMovieId","isLoading","setIsLoading","setError","pathPage","useLocation","useEffect","pathname","split","join","length","result","MoviesService","data","cast","catch","err","console","log","message","finally","Error","Loader","map","actor","_jsxs","src","picPath","profile_path","alt","name","character"],"sourceRoot":""}